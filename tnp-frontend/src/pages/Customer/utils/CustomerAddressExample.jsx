import React from 'react';
import { Box, Typography, Paper, Divider } from '@mui/material';
import { parseFullAddress } from './addressParser';

/**
 * ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô parseFullAddress 
 * ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÅ‡∏ö‡∏ö‡∏£‡∏ß‡∏°‡πÉ‡∏´‡πâ‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÜ
 */
const CustomerAddressExample = ({ customerData }) => {
  // ‡πÉ‡∏ä‡πâ parseFullAddress ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÅ‡∏¢‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏ß‡∏°‡πÄ‡∏õ‡πá‡∏ô‡∏™‡πà‡∏ß‡∏ô‡πÜ
  const parsedAddress = customerData?.cus_address 
    ? parseFullAddress(customerData.cus_address)
    : {
        address: '',
        subdistrict: '',
        district: '',
        province: '',
        zipCode: ''
      };

  return (
    <Paper sx={{ p: 2, mb: 2 }}>
      <Typography variant="h6" sx={{ mb: 2, color: '#B20000' }}>
        üìç ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô
      </Typography>
      
      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö */}
      <Box sx={{ mb: 2, p: 1, backgroundColor: '#f5f5f5', borderRadius: 1 }}>
        <Typography variant="subtitle2" sx={{ fontWeight: 600, mb: 1 }}>
          üìÑ ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏ï‡πâ‡∏ô‡∏â‡∏ö‡∏±‡∏ö (‡∏à‡∏≤‡∏Å‡∏ê‡∏≤‡∏ô‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•):
        </Typography>
        <Typography variant="body2" sx={{ fontStyle: 'italic' }}>
          {customerData?.cus_address || '‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà'}
        </Typography>
      </Box>

      <Divider sx={{ my: 2 }} />

      {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô */}
      <Typography variant="subtitle2" sx={{ fontWeight: 600, mb: 2 }}>
        üîç ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô (‡∏ú‡∏•‡∏à‡∏≤‡∏Å parseFullAddress):
      </Typography>
      
      <Box sx={{ display: 'grid', gap: 1 }}>
        <Box sx={{ display: 'flex', alignItems: 'center' }}>
          <Typography variant="body2" sx={{ fontWeight: 600, minWidth: 120, color: '#333' }}>
            üè† ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:
          </Typography>
          <Typography variant="body2">
            {parsedAddress.address || '-'}
          </Typography>
        </Box>

        <Box sx={{ display: 'flex', alignItems: 'center' }}>
          <Typography variant="body2" sx={{ fontWeight: 600, minWidth: 120, color: '#333' }}>
            üèõÔ∏è ‡∏ï‡∏≥‡∏ö‡∏•/‡πÅ‡∏Ç‡∏ß‡∏á:
          </Typography>
          <Typography variant="body2">
            {parsedAddress.subdistrict || '-'}
          </Typography>
        </Box>

        <Box sx={{ display: 'flex', alignItems: 'center' }}>
          <Typography variant="body2" sx={{ fontWeight: 600, minWidth: 120, color: '#333' }}>
            üèòÔ∏è ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠/‡πÄ‡∏Ç‡∏ï:
          </Typography>
          <Typography variant="body2">
            {parsedAddress.district || '-'}
          </Typography>
        </Box>

        <Box sx={{ display: 'flex', alignItems: 'center' }}>
          <Typography variant="body2" sx={{ fontWeight: 600, minWidth: 120, color: '#333' }}>
            üó∫Ô∏è ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î:
          </Typography>
          <Typography variant="body2">
            {parsedAddress.province || '-'}
          </Typography>
        </Box>

        <Box sx={{ display: 'flex', alignItems: 'center' }}>
          <Typography variant="body2" sx={{ fontWeight: 600, minWidth: 120, color: '#333' }}>
            üìÆ ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå:
          </Typography>
          <Typography variant="body2">
            {parsedAddress.zipCode || '-'}
          </Typography>
        </Box>
      </Box>

      {/* ‡πÅ‡∏™‡∏î‡∏á Debug Information */}
      <Divider sx={{ my: 2 }} />
      <Box sx={{ p: 1, backgroundColor: '#fff3cd', borderRadius: 1, border: '1px solid #ffeaa7' }}>
        <Typography variant="caption" sx={{ fontWeight: 600, color: '#856404' }}>
          üêõ Debug Info:
        </Typography>
        <Typography variant="caption" sx={{ display: 'block', color: '#856404', mt: 1 }}>
          {JSON.stringify(parsedAddress, null, 2)}
        </Typography>
      </Box>
    </Paper>
  );
};

export default CustomerAddressExample;

/**
 * ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:
 * 
 * 1. Import ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô parseFullAddress:
 *    import { parseFullAddress } from './addressParser';
 * 
 * 2. ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà:
 *    const parsedAddress = parseFullAddress(customerData.cus_address);
 * 
 * 3. ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏¢‡∏Å‡∏™‡πà‡∏ß‡∏ô:
 *    - parsedAddress.address     // ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà (‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà, ‡∏ã‡∏≠‡∏¢, ‡∏ñ‡∏ô‡∏ô)
 *    - parsedAddress.subdistrict // ‡∏ï‡∏≥‡∏ö‡∏•/‡πÅ‡∏Ç‡∏ß‡∏á
 *    - parsedAddress.district    // ‡∏≠‡∏≥‡πÄ‡∏†‡∏≠/‡πÄ‡∏Ç‡∏ï
 *    - parsedAddress.province    // ‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î
 *    - parsedAddress.zipCode     // ‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå
 * 
 * 4. ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡πÉ‡∏ô view component:
 *    <Typography>{parsedAddress.province || customerData.cus_province_text || '-'}</Typography>
 */
